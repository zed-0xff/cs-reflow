void return_from_try()
{
    try
    {
        moo1();
        return;
    }
    catch
    {
        bar();
    }

    baz();
}

void return_from_catch()
{
    try
    {
        moo();
    }
    catch (Ex1)
    {
        bar1();
        return;
    }
    catch (Ex2)
    {
        asdf();
    }

    baz();
}

void break_from_try()
{
    while (true)
    {
        try
        {
            moo1();
        }
        catch (Ex1)
        {
            bar();
        }
    }

    baz();
}

void continue_from_try()
{
    while (true)
    {
        try
        {
            moo1();
        }
        catch (Ex1)
        {
            bar();
        }
    }
}

void goto_from_try()
{
    while (true)
    {
        try
        {
            moo1();
            goto l2;
            moo2();
        }
        catch (Ex1)
        {
            bar();
        }
    }

    return;
    l2:
        baz();
}

void goto_from_catch1()
{
    while (true)
    {
        try
        {
            moo();
        }
        catch (Ex1)
        {
            goto l2;
        }
    }

    return;
    l2:
        baz();
}

void goto_from_catch2()
{
    while (true)
    {
        bbb();
        try
        {
            moo();
        }
        catch (Ex1)
        {
            goto l2;
        }
    }

    return;
    l2:
        baz();
}

void set_outer_var()
{
    try
    {
        moo();
    }
    catch
    {
    }
}

void _1_or_2()
{
    try
    {
        moo();
    }
    catch
    {
    }
}

void _2_or_3()
{
    try
    {
        moo();
    }
    catch
    {
    }
}

void _finally()
{
    try
    {
        moo();
    }
    catch
    {
    }

    always_called();
}

